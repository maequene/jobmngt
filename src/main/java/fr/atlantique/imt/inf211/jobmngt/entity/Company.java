package fr.atlantique.imt.inf211.jobmngt.entity;
// Generated Mar 3, 2025, 4:38:44 PM by Hibernate Tools 5.6.15.Final


import java.util.HashSet;
import java.util.Set;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
import jakarta.persistence.PrimaryKeyJoinColumn;
import jakarta.persistence.Table;

/**
 * Company generated by hbm2java
 */
@Entity
@Table(name="company"
    ,schema="public"
)
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class,property = "id")
public class Company  implements java.io.Serializable {


     private int id;
     private AppUser appuser;
     private String denomination;
     private String description;
     private String city;
     private Set<JobOffer> joboffers = new HashSet<>(0);

    public Company() {
    }

	
    public Company(AppUser appuser, String denomination) {
        this.appuser = appuser;
        this.denomination = denomination;
    }
    public Company(AppUser appuser, String denomination, String description, Set<JobOffer> joboffers) {
       this.appuser = appuser;
       this.denomination = denomination;
       this.description = description;
       this.joboffers = joboffers;
    }
   
    @GenericGenerator(name="CompanyIdGenerator", strategy="foreign", parameters=@Parameter(name="property", value="appuser"))@Id

    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    public AppUser getAppuser() {
        return this.appuser;
    }
    
    public void setAppuser(AppUser appuser) {
        this.appuser = appuser;
    }

    
    @Column(name="denomination", nullable=false, length=50)
    public String getDenomination() {
        return this.denomination;
    }
    
    public void setDenomination(String denomination) {
        this.denomination = denomination;
    }

    
    @Column(name="description")
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name="city", length=100)
    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company", cascade = CascadeType.ALL, orphanRemoval = true)
    public Set<JobOffer> getJoboffers() {
        return this.joboffers;
    }
    
    public void setJoboffers(Set<JobOffer> joboffers) {
        this.joboffers = joboffers;
    }
}