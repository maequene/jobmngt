package fr.atlantique.imt.inf211.jobmngt.entity;
// Generated Mar 3, 2025, 4:38:44 PM by Hibernate Tools 5.6.15.Final


import java.beans.Transient;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToOne;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;

/**
 * Appuser generated by hbm2java
 */
@Entity
@Table(name="appuser"
    ,schema="public"
    , uniqueConstraints = @UniqueConstraint(columnNames="mail") 
)
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class,property = "id")
public class AppUser  implements java.io.Serializable {

    public enum UserType{
        CANDIDATE, COMPANY
    }

    private int id;
    private String mail;
    private String password;
    private String city;
    private Company company;
    private Candidate candidate;

    public AppUser() {
    }

	
    public AppUser(int id, String mail, String password) {
        this.id = id;
        this.mail = mail;
        this.password = password;
    }
    public AppUser(int id, String mail, String password, String city, Company company, Candidate candidate) {
       this.id = id;
       this.mail = mail;
       this.password = password;
       this.city = city;
       this.company = company;
       this.candidate = candidate;
    }
   
     @Id
	@SequenceGenerator(name = "APPUSER_ID_GENERATOR", sequenceName = "APPUSER_ID_SEQ",allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator = "APPUSER_ID_GENERATOR") 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    
    @Column(name="mail", unique=true, nullable=false, length=50)
    public String getMail() {
        return this.mail;
    }
    
    public void setMail(String mail) {
        this.mail = mail;
    }
    
    @Column(name="password", nullable=false, length=50)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }
    
    @Column(name="city", length=30)
    public String getCity() {
        return this.city;
    }
    
    public void setCity(String city) {
        this.city = city;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="appuser")
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="appuser")
    public Candidate getCandidate() {
        return this.candidate;
    }
    
    public void setCandidate(Candidate candidate) {
        this.candidate = candidate;
    }

    public void setUserType(UserType userType) {
        // do nothing
    }

    @Transient
    public UserType getUserType() {
       if (this.company != null) {
           return UserType.COMPANY;
       } else if (this.candidate != null) {
           return UserType.CANDIDATE;
       } else {
           return null;
       }
    }

}